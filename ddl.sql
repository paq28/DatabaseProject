drop table if exists DEGREE;
drop table if exists INSTRUCTOR;
drop table if exists COURSE;
drop table if exists DEPARTMENT;
drop table if exists MAJOR;
drop table if exists OMAJOR;
drop table if exists ADVISOR;
drop table if exists OADVISOR;
drop table if exists SOC_ORG;
drop table if exists STUDENT_SEMESTER;
drop table if exists STUDENT;
drop table if exists USER;
drop table if exists ROLE_TABLE;
drop table if exists PENDING_USERS;



CREATE TABLE DEGREE (
  DEGREE_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  DEGREE_NAME varchar(5) NOT NULL);

INSERT INTO DEGREE (DEGREE_NAME)
SELECT DISTINCT DEGREE FROM StudentData.RawData
WHERE DEGREE IS NOT NULL;

CREATE TABLE STUDENT (
STUDENT_ID int(11) PRIMARY KEY,
SAT_VERBAL int(11) NOT NULL,
SAT_MATH int(11) NOT NULL,
HS_RANK int(11) NOT NULL,
HS_OUTOF int(11) NOT NULL,
DEGREE_DATE DATE NOT NULL,
DEGREE_ID int(11) NULL,
MAJOR_ID int(11) NULL,
GPA decimal(6,4) NOT NULL,
GENDER VARCHAR(2));


alter table STUDENT add column DEGREE_NAME varchar(5);
alter table STUDENT add column MAJOR_NAME varchar(24);

INSERT INTO STUDENT (STUDENT_ID, SAT_VERBAL, SAT_MATH, HS_RANK, HS_OUTOF, DEGREE_DATE, GPA, GENDER, DEGREE_NAME,MAJOR_NAME)
SELECT DISTINCT STUDENT_ID, SAT_VERBAL, SAT_MATH, HS_RANK, HS_OUTOF, DEGREE_DATE, GPA, GENDER, DEGREE , MAJOR
FROM StudentData.RawData
WHERE STUDENT_ID IS NOT NULL;

UPDATE STUDENT
INNER JOIN
DEGREE ON STUDENT.DEGREE_NAME = DEGREE.DEGREE_NAME 
SET STUDENT.DEGREE_ID = DEGREE.DEGREE_ID;

alter table STUDENT drop column DEGREE_NAME;

CREATE TABLE INSTRUCTOR (
  INSTRUCTOR_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  INSTRUCTOR_NAME varchar(24) NOT NULL);

INSERT INTO INSTRUCTOR (INSTRUCTOR_NAME)
SELECT DISTINCT INSTRUCTOR FROM StudentData.RawData where INSTRUCTOR IS NOT NULL;

CREATE TABLE DEPARTMENT (
  DEPARTMENT_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  DEPARTMENT_NAME varchar(24) NOT NULL);

INSERT INTO DEPARTMENT (DEPARTMENT_NAME)
SELECT DISTINCT DEPARTMENT FROM StudentData.RawData where DEPARTMENT IS NOT NULL;

CREATE TABLE MAJOR (
  MAJOR_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  MAJOR_NAME varchar(24) NOT NULL);

INSERT INTO MAJOR (MAJOR_NAME)
SELECT DISTINCT MAJOR FROM StudentData.RawData where MAJOR IS NOT NULL;

UPDATE STUDENT
INNER JOIN
MAJOR ON STUDENT.MAJOR_NAME = MAJOR.MAJOR_NAME 
SET STUDENT.MAJOR_ID = MAJOR.MAJOR_ID;

alter table STUDENT drop column MAJOR_NAME;

CREATE TABLE ADVISOR (
  ADVISOR_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  ADVISOR_NAME varchar(24) NOT NULL);

INSERT INTO ADVISOR (ADVISOR_NAME)
SELECT DISTINCT ADVISOR FROM StudentData.RawData where ADVISOR IS NOT NULL;

CREATE TABLE OMAJOR (
  OMAJOR_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  OMAJOR_NAME varchar(24) NOT NULL);

INSERT INTO OMAJOR (OMAJOR_NAME)
SELECT DISTINCT OMAJOR FROM StudentData.RawData where OMAJOR IS NOT NULL;

CREATE TABLE OADVISOR (
  OADVISOR_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  OADVISOR_NAME varchar(24));

INSERT INTO OADVISOR (OMAJOR_NAME)
SELECT DISTINCT OADVISOR FROM StudentData.RawData where OADVISOR IS NOT NULL;

CREATE TABLE SOC_ORG (
  SOC_ORG_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  SOC_ORG_NAME varchar(24) NOT NULL);

INSERT INTO SOC_ORG (SOC_ORG_NAME)
SELECT DISTINCT SOC_ORG FROM StudentData.RawData where SOC_ORG IS NOT NULL;

CREATE TABLE SEMESTER(
  SEMESTER_ID int(11) PRIMARY key AUTO_INCREMENT,
  SEMESTER_YEAR int(11) NOT NULL,
  SEMESTER_CODE varchar(2) NOT NULL
);
INSERT INTO SEMESTER(SEMESTER_YEAR,SEMESTER_CODE)
SELECT DISTINCT YEAR,SEMESTER FROM StudentData.RawData where YEAR IS NOT NULL AND SEMESTER IS NOT NULL;

CREATE TABLE STUDENT_SEMESTER (
  STUDENT_SEMESTER_ID int(11) PRIMARY key AUTO_INCREMENT,
  STUDENT_ID int(11) NOT NULL REFERENCES STUDENT(STUDENT_ID),
  SEMESTER_ID int(11) NOT NULL REFERENCES SEMESTER(SEMESTER_ID),
  ADDRESS varchar(3) NOT NULL);


INSERT INTO STUDENT_SEMESTER (STUDENT_ID, SEMESTER_YEAR, SEMESTER ,ADDRESS)
SELECT DISTINCT STUDENT_ID,YEAR,SEMESTER,ADDRESS FROM StudentData.RawData where SEMESTER IS NOT NULL AND STUDENT_ID IS NOT NULL;

CREATE TABLE COURSE(
  COURSE_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  DEPARTMENT_ID int(11) NULL REFERENCES DEPARTMENT(DEPARTMENT_ID),
  COURSE_NUM varchar(4) NOT NULL,
  COURSE_HOURS numeric(4,2) NOT NULL

);

alter table COURSE add column DEPARTMENT_NAME varchar(4);
INSERT INTO COURSE(DEPARTMENT_NAME,COURSE_NUM,COURSE_HOURS)
SELECT DISTINCT DEPARTMENT,COURSE_NUM,HOURS FROM StudentData.RawData WHERE DEPARTMENT IS NOT NULL AND COURSE_NUM IS NOT NULL AND 
HOURS IS NOT NULL;

UPDATE COURSE
INNER JOIN
DEPARTMENT ON DEPARTMENT.DEPARTMENT_NAME = COURSE.DEPARTMENT_NAME 
SET COURSE.DEPARTMENT_ID = DEPARTMENT.DEPARTMENT_ID;

alter table COURSE drop column DEPARTMENT_NAME;

CREATE TABLE OFFERING(
  SEMESTER int(11),
  COURSE_ID int(11)
);

CREATE TABLE ENROLLMENT(
  ENROLLMENT_ID int(11) PRIMARY key AUTO_INCREMENT,
  STUDENT_SEMESTER_ID int(11) NULL,
  GRADE int(11) NOT NULL
); 

CREATE TABLE ROLE_TABLE (
  ROLE_ID int(11) PRIMARY KEY AUTO_INCREMENT,
  ROLE_NAME varchar(24) NOT NULL
);

CREATE TABLE USER(
  ID_USER int(11) PRIMARY KEY AUTO_INCREMENT,
  USERNAME varchar(15) NOT NULL,
  EMAIL varchar(40) NOT NULL,
  PASSCODE varchar(20) NOT NULL,
  ROLE_ID int(11) NOT NULL REFERENCES ROLE_TABLE(ROLE_ID) 
);

CREATE TABLE PENDING_USERS(
  USERNAME varchar(15) NOT NULL,
  EMAIL varchar(40) NOT NULL,
  PASSCODE varchar(20) NOT NULL
);
INSERT INTO ROLE_TABLE(ROLE_ID,ROLE_NAME)VALUES(1,"admin"),(2,"public");

INSERT INTO USER(ID_USER,USERNAME,EMAIL,PASSCODE,ROLE_ID) VALUES 
  (1,"paola","paola@gmail.com","123456",1),
  (2,"joe","joe@gmail.com","123456",2);

INSERT INTO PENDING_USERS(USERNAME,EMAIL,PASSCODE) VALUES("michael","michael@gmail.com","123456");